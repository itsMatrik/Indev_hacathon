services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: aiapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  ml-service:
    build: ./ML
    container_name: ml-service
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  java-server:
    build: ./JavaServer
    container_name: java-server
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/aiapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      ML_SERVICE_URL: http://ml-service:5000

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - java-server
      
volumes:
  pgdata: